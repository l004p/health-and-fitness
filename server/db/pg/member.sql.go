// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: member.sql

package pg

import (
	"context"
)

const getAllTrainers = `-- name: getAllTrainers :many
SELECT u.first_name, u.last_name, u.username
FROM users u 
INNER JOIN member_trained mt
ON u.user_id=mt.trainer_id
WHERE mt.member_id=$1
`

type getAllTrainersRow struct {
	FirstName string
	LastName  string
	Username  string
}

func (q *Queries) getAllTrainers(ctx context.Context, memberID int32) ([]getAllTrainersRow, error) {
	rows, err := q.db.Query(ctx, getAllTrainers, memberID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []getAllTrainersRow
	for rows.Next() {
		var i getAllTrainersRow
		if err := rows.Scan(&i.FirstName, &i.LastName, &i.Username); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
